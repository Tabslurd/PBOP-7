# -*- coding: utf-8 -*-
"""Untitled52.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OURbFOEQxJFHJLCabCQUH7xcHo7yWEHS
"""

# SINGLE INHERITANCE

class Hewan():                    # Parent Class
  def bersuara(self):
    print('Kucing bersuara')

class Kucing(Hewan):            # Child Class Mewarisi Class Hewan
  def suara(self):
    print('meong..meong..meong..')

# Objek
k = Kucing()
k.bersuara()
k.suara()

class Mahasiswa():
  def __init__(self,nama,nim):
    self.nama = nama
    self.nim = nim
  
  def detailMhs(self):
    return self.nim, self.nama

  def cekMhs(self):
    if self.nim < 15000:
      return "Mahasiswa Aktif"
    else:
      return "Mahasiswa tidak terdaftar"

class Siswa(Mahasiswa):
  def End(self):
    print("Mahasiswa belum melakukan daftar ulang")

mahasiswa1 = Mahasiswa("Mahasiswa 1", 14643)
print(mahasiswa1.detailMhs(),mahasiswa1.cekMhs())
mahasiswa2 = Siswa("Mahasiswa 2", 15030)
print(mahasiswa2.detailMhs(),mahasiswa2.cekMhs())
mahasiswa2.End()

# MULTILEVEL INHERITANCE

class Hewan():                    # Parent Class
  def bersuara(self):
    print('Kucing bersuara')

class Kucing(Hewan):            # Child Class Mewarisi Class Hewan
  def suara(self):
    print('meong..meong..meong..')

class AnakKucing(Kucing):       # Child Class AnakKucing Mewarisi dari Class Hewan
  def minum(self):
    print('minum susu')

# Objek
ak = AnakKucing()
ak.bersuara()
ak.suara()
ak.minum()

class Mahasiswa():
  def __init__(self,nama,nim):
    self.nama = nama
    self.nim = nim

class Siswa1(Mahasiswa):
  def __init__(self,nama,nim):
    self.nama = nama
    self.nim = nim

class Siswa2(Siswa1):
  def __init__(self,nama,nim):
    self.nama = nama
    self.nim = nim

mhs1 = Mahasiswa('Umayyah',12315)
mhs2 = Siswa1('Umar',12316)
mhs3 = Siswa2('Usman',12317)

print(mhs1.nama,mhs1.nim)
print(mhs2.nama)
print(mhs3.nim)

# HIERARCHICAL INHERITANCE

class Induk():
  def fungsiinduk(self):
    print('Fungsi pada parent class:')

class Anak1(Induk):
  def fungsianak1(self):
    print('Fungsi pada anak 1.')

class Anak2(Induk):
  def fungsianak2(self):
    print('Fungsi pada anak 2.')

a1 = Anak1()
a2 = Anak2()

a1.fungsiinduk()
a1.fungsianak1()

a2.fungsiinduk()
a2.fungsianak2()

class Mahasiswa():
  def __init__(self,nama,nim):
    self.nama = nama
    self.nim = nim

class Siswa1(Mahasiswa):
  def __init__(self,nama,nim):
    self.nama = nama
    self.nim = nim
  def detSiswa1(self):
    print(self.nama,'alamat: wall rose')

class Siswa2(Mahasiswa):
  def __init__(self,nama,nim):
    self.nama = nama
    self.nim = nim
  def detSiswa2(self):
    print(self.nama,'jurusan: informatika')

mhs1 = Siswa1('Amrin',354)
mhs2 = Siswa2('Affan',313)


print(mhs1.nim)
mhs1.detSiswa1()
print(mhs2.nim)
mhs2.detSiswa2()

# MULTIPLE INHERITANCE
# Parent 1
class Perhitungan1():
  def penjumlahan(self,a,b):
    return a+b

# Parent 2
class Perhitungan2():
  def perkalian(self,a,b):
    return a*b

class Hitung(Perhitungan1,Perhitungan2):
  def pembagian(self,a,b):
    return a/b

h = Hitung()
print(h.penjumlahan(20,30))
print(h.perkalian(5,4))
print(h.pembagian(12,6))

class Mahasiswa1():
  def __init__(self,nama,nim):
    self.nama = nama
    self.nim = nim

class Mahasiswa2():
  def __init__(self,alamat,jurusan):
    self.alamat = alamat
    self.jurusan = jurusan

class Siswa(Mahasiswa1,Mahasiswa2):
  def __init__(self,nama,nim,alamat,jurusan):
    Mahasiswa1.__init__(self,nama,nim)
    Mahasiswa2.__init__(self,alamat,jurusan)

s = Siswa('Werkudoro',84725,'Jalan Kenangan','Hukum')
print('NIM:',s.nim,'Nama:',s.nama,'Alamat:',s.alamat,'Jurusan:',s.jurusan)

class ComputerPart():
  def __init__(self,pabrikan,nama,jenis,harga):
    self.pabrikan = pabrikan
    self.nama = nama
    self.jenis = jenis
    self.harga = harga

class Processor(ComputerPart):
  def __init__(self,pabrikan,nama,harga,jumlah_core,speed):
    super().__init__(pabrikan,nama,'processor',harga)
    self.jumlah_core = jumlah_core
    self.speed = speed

class RandomAccesMemory(ComputerPart):
  def __init__(self,pabrikan,nama,harga,kapasitas):
    super().__init__(pabrikan,nama,'RAM',harga)
    self.kapasitas = kapasitas

class HardDiskSATA(ComputerPart):
  def __init__(self,pabrikan,nama,harga,kapasitas,rpm):
    super().__init__(pabrikan,nama,'SATA',harga)
    self.kapasitas = kapasitas
    self.rpm = rpm

# PROGRAM MULTILEVEL INHERITANCE

class ComputerPart():  # Parent Class
  def __init__(self,pabrikan,nama,jenis): #Fungsi
    self.pabrikan = pabrikan #Atribut
    self.nama = nama #Atribut
    self.jenis = jenis #Atribut

class Motherboard(ComputerPart): # Child Class Mewarisi Class ComputerPart
  def __init__(self,pabrikan,nama,harga): #Fungsi
    super().__init__(pabrikan,nama,'motherboard') #Method/Fungsi(Fungsi ini akan mengembalikan objek proksi)

class CentralProcessingUnit(Motherboard): # Child Class Mewarisi Class Motherboard
  def __init__(self,pabrikan,nama,harga): #Fungsi
    super().__init__(pabrikan,nama,'CPU') #Method/Fungsi(Fungsi ini akan mengembalikan objek proksi)

class GraphicsProcessingUnit(CentralProcessingUnit): # Child Class Mewarisi Class CentralProcessingUnit
  def __init__(self,pabrikan,nama,harga): #Fungsi
    super().__init__(pabrikan,nama,'GPU') #Method/Fungsi(Fungsi ini akan mengembalikan objek proksi)

class RandomAccesMemory(GraphicsProcessingUnit): # Child Class Mewarisi Class GraphicsProcessingUnit
  def __init__(self,pabrikan,nama,harga): #Fungsi
    super().__init__(pabrikan,nama,'RAM') #Method/Fungsi(Fungsi ini akan mengembalikan objek proksi)

class HardDiskSATA(RandomAccesMemory): # Child Class Mewarisi Class RandomAccesMemory
  def __init__(self,pabrikan,nama): #Fungsi
    super().__init__(pabrikan,nama,'SATA') #Method/Fungsi(Fungsi ini akan mengembalikan objek proksi)

pc = ComputerPart('','Komputer Desktop Gaming Fullset Platform Intel','') #Pemanggilan fungsi-fungsi dan atribut-atribut
mb = Motherboard('','MSI H510M A Pro',0) #Pemanggilan fungsi-fungsi dan atribut-atribut
cpu = CentralProcessingUnit('','Intel Core i5 11400F',0) #Pemanggilan fungsi-fungsi dan atribut-atribut
gpu = GraphicsProcessingUnit('','Gigabyte Geforce GTX 1050 Ti 4GB GDDR5',0) #Pemanggilan fungsi-fungsi dan atribut-atribut
ram = RandomAccesMemory('','Klevv Bolt X Series DDR4-3200 16GB (2x8GB)',0) #Pemanggilan fungsi-fungsi dan atribut-atribut
hdd = HardDiskSATA('','SSD Adata SX8200 Pro M.2 NVME 512 GB') #Pemanggilan fungsi-fungsi dan atribut-atribut

#Penataan fungsi-fungsi dan atribut-atribut
print(pc.nama)
print(mb.nama)
print(cpu.nama)
print(gpu.nama)
print(ram.nama)
print(hdd.nama)

# PROGRAM HIERARCHICAL INHERITANCE

class ComputerPart(): # Parent Class
  def __init__(self,pabrikan,nama,jenis): #Fungsi
    self.pabrikan = pabrikan #Atribut
    self.nama = nama #Atribut
    self.jenis = jenis #Atribut
  def harga_pc(self): #Fungsi
    print('Harga: Rp 9.634.000')

class Motherboard(ComputerPart): # Child Class Mewarisi Parent Class (ComputerPart)
  def __init__(self,pabrikan,nama,harga,jumlah_core): #Fungsi
    super().__init__(pabrikan,nama,'motherboard') #Method/Fungsi(Fungsi ini akan mengembalikan objek proksi)
    self.jumlah_core = jumlah_core #Atribut 
  def harga_mb(self): #Fungsi 
    print('Harga: Rp 1.150.000')

class CentralProcessingUnit(ComputerPart): # Child Class Mewarisi Parent Class (ComputerPart)
  def __init__(self,pabrikan,nama,harga,kapasitas): #Fungsi
    super().__init__(pabrikan,nama,'CPU') #Method/Fungsi(Fungsi ini akan mengembalikan objek proksi)
    self.kapasitas = kapasitas #Atribut
  def harga_cpu(self):
    print('Harga: Rp 2.535.000')

class GraphicsProcessingUnit(ComputerPart): # Child Class Mewarisi Parent Class (ComputerPart)
  def __init__(self,pabrikan,nama,harga,kapasitas): #Fungsi
    super().__init__(pabrikan,nama,'GPU') #Method/Fungsi(Fungsi ini akan mengembalikan objek proksi)
    self.kapasitas = kapasitas #Atribut
  def harga_gpu(self): #Fungsi
    print('Harga: Rp 3.950.000')

class RandomAccesMemory(ComputerPart): # Child Class Mewarisi Parent Class (ComputerPart)
  def __init__(self,pabrikan,nama,harga,kapasitas): #Fungsi
    super().__init__(pabrikan,nama,'RAM') #Method/Fungsi(Fungsi ini akan mengembalikan objek proksi)
    self.kapasitas = kapasitas #Atribut
  def harga_ram(self): #Fungsi
    print('Harga: Rp 1.050.000')

class HardDiskSATA(ComputerPart): # Child Class Mewarisi Parent Class (ComputerPart)
  def __init__(self,pabrikan,nama,kapasitas,rpm): #Fungsi
    super().__init__(pabrikan,nama,'SATA') #Method/Fungsi(Fungsi ini akan mengembalikan objek proksi)
    self.kapasitas = kapasitas #Atribut
    self.rpm = rpm #Atribut
  def harga_hdd(self): #Fungsi
    print('Harga: Rp 949.000')

pc = ComputerPart('','Komputer Desktop Gaming Fullset Platform Intel','') #Pemanggilan fungsi-fungsi dan atribut-atribut
mb = Motherboard('','MSI H510M A Pro',0,0) #Pemanggilan fungsi-fungsi dan atribut-atribut
cpu = CentralProcessingUnit('','Intel Core i5 11400F',0,'') #Pemanggilan fungsi-fungsi dan atribut-atribut
gpu = GraphicsProcessingUnit('','Gigabyte Geforce GTX 1050 Ti 4GB GDDR5',0,'') #Pemanggilan fungsi-fungsi dan atribut-atribut
ram = RandomAccesMemory('','Klevv Bolt X Series DDR4-3200 16GB (2x8GB)',0,'') #Pemanggilan fungsi-fungsi dan atribut-atribut
hdd = HardDiskSATA('','SSD Adata SX8200 Pro M.2 NVME 512 GB',0,'') #Pemanggilan fungsi-fungsi dan atribut-atribut

#Penataan fungsi-fungsi dan atribut-atribut
print(pc.nama)
pc.harga_pc()
print(mb.nama)
mb.harga_mb()
print(cpu.nama)
cpu.harga_cpu()
print(gpu.nama)
gpu.harga_gpu()
print(ram.nama)
ram.harga_ram()
print(hdd.nama)
hdd.harga_hdd()

# PROGRAM MULTIPLE INHERITANCE

class Motherboard(): # Parent Class 1
  def __init__(self,nama_mb,harga_mb): #Fungsi
    self.nama_mb = nama_mb #Atribut
    self.harga_mb = harga_mb #Atribut

class CentralProcessingUnit(): # Parent Class 2
  def __init__(self,nama_cpu,harga_cpu): #Fungsi
    self.nama_cpu = nama_cpu #Atribut
    self.harga_cpu = harga_cpu #Atribut

class GraphicsProcessingUnit(): # Parent Class 3
  def __init__(self,nama_gpu,harga_gpu): #Fungsi
    self.nama_gpu = nama_gpu #Atribut
    self.harga_gpu = harga_gpu #Atribut

class RandomAccesMemory(): # Parent Class 4
  def __init__(self,nama_ram,harga_ram): #Fungsi
    self.nama_ram = nama_ram #Atribut
    self.harga_ram = harga_ram #Atribut

class HardDiskSATA(): # Parent Class 5
  def __init__(self,nama_hdd,harga_hdd): #Fungsi
    self.nama_hdd = nama_hdd #Atribut
    self.harga_hdd = harga_hdd #Atribut

class ComputerPart(Motherboard,CentralProcessingUnit,GraphicsProcessingUnit,RandomAccesMemory,HardDiskSATA): # Child Class Mewarisi Semua Parent Class Diatas
  def __init__(self,nama_mb,harga_mb,nama_cpu,harga_cpu,nama_gpu,harga_gpu,nama_ram,harga_ram,nama_hdd,harga_hdd): #Fungsi
    Motherboard.__init__(self,nama_mb,harga_mb) #Pemanggilan fungsi-fungsi dan atribut-atribut
    CentralProcessingUnit.__init__(self,nama_cpu,harga_cpu) #Pemanggilan fungsi-fungsi dan atribut-atribut
    GraphicsProcessingUnit.__init__(self,nama_gpu,harga_gpu) #Pemanggilan fungsi-fungsi dan atribut-atribut
    RandomAccesMemory.__init__(self,nama_ram,harga_ram) #Pemanggilan fungsi-fungsi dan atribut-atribut
    HardDiskSATA.__init__(self,nama_hdd,harga_hdd) #Pemanggilan fungsi-fungsi dan atribut-atribut

#Penataan fungsi-fungsi dan atribut-atribut
pc = ComputerPart('MSI H510M A Pro','Rp 9.634.000','Intel Core i5 11400F','Rp 2.535.000','Gigabyte Geforce GTX 1050 Ti 4GB GDDR5','Rp 3.950.000','Klevv Bolt X Series DDR4-3200 16GB (2x8GB)','Rp 1.050.000','SSD Adata SX8200 Pro M.2 NVME 512 GB','Rp 949.000')
print(pc.nama_mb,pc.harga_mb)
print(pc.nama_cpu,pc.harga_cpu)
print(pc.nama_gpu,pc.harga_gpu)
print(pc.nama_ram,pc.harga_ram)
print(pc.nama_hdd,pc.harga_hdd)